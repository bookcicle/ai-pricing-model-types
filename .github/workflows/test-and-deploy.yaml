name: CI/CD

on:
  pull_request:
    branches: [ "dev", "main" ]
  push:
    branches: [ "dev", "main" ]
  workflow_dispatch:

jobs:
  # --------------------------
  # 1) Validate CloudFormation
  # --------------------------
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install or Update AWS CLI
        run: |
          if command -v aws &> /dev/null; then
            echo "AWS CLI found. Attempting update..."
          else
            echo "AWS CLI not found. Installing..."
            sudo apt-get update
            sudo apt-get install -y curl unzip
            curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -q awscliv2.zip
            sudo ./aws/install
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1

      - name: Validate CloudFormation template
        run: |
          aws cloudformation validate-template \
            --region us-east-1 \
            --template-body file://./deploy/cloudformation.yml

  # -----------------
  # 2) Lint the code
  # -----------------
  lint:
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Setup Rust stable using dtolnay/rust-toolchain
      - name: Setup Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: x86_64-unknown-linux-gnu

      # Cache Cargo + Rustup
      - name: Cache Cargo and Rustup
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy (Lint)
        run: cargo clippy --all-targets --all-features -- -D warnings

  # -------------
  # 3) Run Tests
  # -------------
  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Setup Rust stable again for test job
      - name: Setup Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      # Cache Cargo + Rustup
      - name: Cache Cargo and Rustup
        uses: Swatinem/rust-cache@v2

      - name: Run Tests
        run: cargo test --verbose